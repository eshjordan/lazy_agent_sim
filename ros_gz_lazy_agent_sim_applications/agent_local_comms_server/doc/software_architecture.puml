@startuml

node "Mocap Camera"

node "Controller PC" {
  package "Gazebo" {
    component "Simulated e-puck 0"
    component "Simulated e-puck 1"
  }

  component "LocalCommsManager"

  component "High-level Controller"

  component "epuck_cpp_driver"

  component "Mocap ROS Driver"
}

node "e-puck 0" {
  component "e-puck 0 RobotCommsModel"
  component "e-puck 0 UDPKnowledgeServer"
  component "e-puck 0 UDPKnowledgeClient"
  component "e-puck 0 Advanced Sercom v2"
}

node "e-puck 1" {
  component "e-puck 1 RobotCommsModel"
  component "e-puck 1 UDPKnowledgeServer"
  component "e-puck 1 UDPKnowledgeClient"
  component "e-puck 1 Advanced Sercom v2"
}

"epuck_cpp_driver" <--> "e-puck 0 Advanced Sercom v2": State & Controls
"epuck_cpp_driver" <--> "e-puck 1 Advanced Sercom v2": State & Controls

"LocalCommsManager" <--> "e-puck 0 RobotCommsModel": Heartbeats\n\n\n
"LocalCommsManager" <-left-> "e-puck 1 RobotCommsModel": Heartbeats

"e-puck 0 Advanced Sercom v2" -[hidden]-> "e-puck 0 UDPKnowledgeClient"
"e-puck 1 Advanced Sercom v2" -[hidden]-> "e-puck 1 UDPKnowledgeClient"
"e-puck 0 RobotCommsModel" <--> "e-puck 0 UDPKnowledgeServer"
"e-puck 0 RobotCommsModel" <--> "e-puck 0 UDPKnowledgeClient": Knowledge
"e-puck 1 RobotCommsModel" <--> "e-puck 1 UDPKnowledgeClient": Knowledge
"e-puck 1 RobotCommsModel" <--> "e-puck 1 UDPKnowledgeServer": Knowledge

"e-puck 0 UDPKnowledgeServer" <-> "e-puck 1 UDPKnowledgeClient": Knowledge

"Mocap Camera" <-- "e-puck 0": Position
"Mocap Camera" <-- "e-puck 1": Position
"Mocap Camera" --> "Mocap ROS Driver": Positions
"Mocap ROS Driver" --> "High-level Controller": Groundtruth

"High-level Controller" --> "epuck_cpp_driver": State & Controls

"High-level Controller" <-- "LocalCommsManager": Knowledge

"Simulated e-puck 0" <--> "Simulated e-puck 1": Knowledge

"High-level Controller" -> "Gazebo": State & Controls

@enduml
